package %PACKAGE%.payment.base;

import com.badlogic.gdx.pay.Offer;
import com.badlogic.gdx.pay.OfferType;
import com.badlogic.gdx.pay.PurchaseManager;
import com.badlogic.gdx.pay.PurchaseManagerConfig;
import %PACKAGE%.%MAIN_CLASS%;
import %PACKAGE%.payment.CustomPurchaseObserver;

public class CustomPurchaseManager {
  private PurchaseManager purchaseManager;

  public CustomPurchaseManager() {
    this.purchaseManager = null;
  }

  public CustomPurchaseManager(PurchaseManager purchaseManager) {
    this.purchaseManager = purchaseManager;

    if (this.purchaseManager != null) {
      this.purchaseManager.install(
          new CustomPurchaseObserver(),
          this.getPurchaseManagerConfig(),
          true
      );
    }
  }

  public static CustomPurchaseManager getInstance() {
    return %MAIN_CLASS%.getInstance().getInstanceOf(CustomPurchaseManager.class);
  }

  private PurchaseManagerConfig getPurchaseManagerConfig() {
    PurchaseManagerConfig config = new PurchaseManagerConfig();

    config.addOffer(new Offer().setType(OfferType.ENTITLEMENT).setIdentifier(CustomPurchaseObserver.ID_OF_ADS));

    return config;
  }

  public PurchaseManager getPurchaseManager() {
    return this.purchaseManager;
  }

  public void dispose() {
    if (this.purchaseManager != null) {
      this.purchaseManager.dispose();
    }
  }
}